{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "edf2b01c-c1fd-46a2-955a-8ba14198d133",
   "metadata": {},
   "source": [
    "### Projeto 2: Previsao do preco da Dogecoin para um intervalo de uma semana"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dee54a48-2090-490b-b793-6ff05b438385",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas_datareader as web\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ac26f650-74cb-4805-a518-a4d8787f5f59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-12-01</th>\n",
       "      <td>0.003572</td>\n",
       "      <td>0.003269</td>\n",
       "      <td>0.003551</td>\n",
       "      <td>0.003335</td>\n",
       "      <td>80163603</td>\n",
       "      <td>0.003335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-02</th>\n",
       "      <td>0.003436</td>\n",
       "      <td>0.003293</td>\n",
       "      <td>0.003335</td>\n",
       "      <td>0.003374</td>\n",
       "      <td>58705661</td>\n",
       "      <td>0.003374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-03</th>\n",
       "      <td>0.003500</td>\n",
       "      <td>0.003352</td>\n",
       "      <td>0.003375</td>\n",
       "      <td>0.003428</td>\n",
       "      <td>47907032</td>\n",
       "      <td>0.003428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-04</th>\n",
       "      <td>0.003447</td>\n",
       "      <td>0.003285</td>\n",
       "      <td>0.003429</td>\n",
       "      <td>0.003298</td>\n",
       "      <td>45062222</td>\n",
       "      <td>0.003298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-05</th>\n",
       "      <td>0.003414</td>\n",
       "      <td>0.003268</td>\n",
       "      <td>0.003297</td>\n",
       "      <td>0.003397</td>\n",
       "      <td>43386583</td>\n",
       "      <td>0.003397</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                High       Low      Open     Close    Volume  Adj Close\n",
       "Date                                                                   \n",
       "2020-12-01  0.003572  0.003269  0.003551  0.003335  80163603   0.003335\n",
       "2020-12-02  0.003436  0.003293  0.003335  0.003374  58705661   0.003374\n",
       "2020-12-03  0.003500  0.003352  0.003375  0.003428  47907032   0.003428\n",
       "2020-12-04  0.003447  0.003285  0.003429  0.003298  45062222   0.003298\n",
       "2020-12-05  0.003414  0.003268  0.003297  0.003397  43386583   0.003397"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = web.DataReader('DOGE-USD', data_source='yahoo', start='2020-12-01', end='2021-06-06')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2a24257e-acc2-4e2d-87d6-8a1561cca9f2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f6db96ca-c084-45de-8f3f-dbc04e96e495",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x540 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.plot(figsize=(15,7.5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a8f634b6-4a4b-4c1a-809d-83f05b3ff64b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "56d3ecc3-1b3b-4201-9711-644f7a384ac0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e84ee90-05ef-4de0-b72f-b7d28ad0ab80",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ccb9b1ab-b2c9-4918-8e49-2d3760381a28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x540 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "doge = df\n",
    "doge = doge.loc[: ,[\"Close\"]]\n",
    "doge.plot(figsize=(15,7.5));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c911c900-7c45-4b1b-af7f-20cfacd724a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-12-01</th>\n",
       "      <td>0.003335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-02</th>\n",
       "      <td>0.003374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-03</th>\n",
       "      <td>0.003428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-04</th>\n",
       "      <td>0.003298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-05</th>\n",
       "      <td>0.003397</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Close\n",
       "Date                \n",
       "2020-12-01  0.003335\n",
       "2020-12-02  0.003374\n",
       "2020-12-03  0.003428\n",
       "2020-12-04  0.003298\n",
       "2020-12-05  0.003397"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "doge.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b0dcaec5-3ace-45c7-aa95-f856d38341af",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prever n dias no futuro\n",
    "predic_day = 7 #7 dias\n",
    "\n",
    "doge[\"Prediction\"] = doge[[\"Close\"]].shift(-predic_day)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3888624b-1c3f-4412-ad91-2370b21bfa98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Prediction</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-12-01</th>\n",
       "      <td>0.003335</td>\n",
       "      <td>0.003179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-02</th>\n",
       "      <td>0.003374</td>\n",
       "      <td>0.003158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-03</th>\n",
       "      <td>0.003428</td>\n",
       "      <td>0.003105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-04</th>\n",
       "      <td>0.003298</td>\n",
       "      <td>0.003079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-05</th>\n",
       "      <td>0.003397</td>\n",
       "      <td>0.003163</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Close  Prediction\n",
       "Date                            \n",
       "2020-12-01  0.003335    0.003179\n",
       "2020-12-02  0.003374    0.003158\n",
       "2020-12-03  0.003428    0.003105\n",
       "2020-12-04  0.003298    0.003079\n",
       "2020-12-05  0.003397    0.003163"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "doge.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0946f1bd-2667-447f-9fca-258806dcb06d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Prediction</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-06-02</th>\n",
       "      <td>0.399963</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-03</th>\n",
       "      <td>0.376323</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-04</th>\n",
       "      <td>0.372177</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-05</th>\n",
       "      <td>0.371807</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-06</th>\n",
       "      <td>0.331050</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Close  Prediction\n",
       "Date                            \n",
       "2021-06-02  0.399963         NaN\n",
       "2021-06-03  0.376323         NaN\n",
       "2021-06-04  0.372177         NaN\n",
       "2021-06-05  0.371807         NaN\n",
       "2021-06-06  0.331050         NaN"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "doge.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "67c4f67c-39df-4f37-aca3-4d82d37bf782",
   "metadata": {
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.003335  ],\n",
       "       [0.003374  ],\n",
       "       [0.003428  ],\n",
       "       [0.003298  ],\n",
       "       [0.003397  ],\n",
       "       [0.003388  ],\n",
       "       [0.003342  ],\n",
       "       [0.003179  ],\n",
       "       [0.003158  ],\n",
       "       [0.003105  ],\n",
       "       [0.003079  ],\n",
       "       [0.003163  ],\n",
       "       [0.003256  ],\n",
       "       [0.003231  ],\n",
       "       [0.003206  ],\n",
       "       [0.003416  ],\n",
       "       [0.00373   ],\n",
       "       [0.003858  ],\n",
       "       [0.003927  ],\n",
       "       [0.004625  ],\n",
       "       [0.004787  ],\n",
       "       [0.004508  ],\n",
       "       [0.003768  ],\n",
       "       [0.00457   ],\n",
       "       [0.004582  ],\n",
       "       [0.004494  ],\n",
       "       [0.004548  ],\n",
       "       [0.004592  ],\n",
       "       [0.004486  ],\n",
       "       [0.004636  ],\n",
       "       [0.004682  ],\n",
       "       [0.005685  ],\n",
       "       [0.010615  ],\n",
       "       [0.009771  ],\n",
       "       [0.009767  ],\n",
       "       [0.00992   ],\n",
       "       [0.010465  ],\n",
       "       [0.009742  ],\n",
       "       [0.009846  ],\n",
       "       [0.010194  ],\n",
       "       [0.00986   ],\n",
       "       [0.008835  ],\n",
       "       [0.008063  ],\n",
       "       [0.008616  ],\n",
       "       [0.009397  ],\n",
       "       [0.009369  ],\n",
       "       [0.009265  ],\n",
       "       [0.009067  ],\n",
       "       [0.009171  ],\n",
       "       [0.009098  ],\n",
       "       [0.00906   ],\n",
       "       [0.008166  ],\n",
       "       [0.008524  ],\n",
       "       [0.008579  ],\n",
       "       [0.008727  ],\n",
       "       [0.008383  ],\n",
       "       [0.008255  ],\n",
       "       [0.007482  ],\n",
       "       [0.012555  ],\n",
       "       [0.047162  ],\n",
       "       [0.028176  ],\n",
       "       [0.037196  ],\n",
       "       [0.034875  ],\n",
       "       [0.03152   ],\n",
       "       [0.03712   ],\n",
       "       [0.053289  ],\n",
       "       [0.046935  ],\n",
       "       [0.057595  ],\n",
       "       [0.078782  ],\n",
       "       [0.078825  ],\n",
       "       [0.07007   ],\n",
       "       [0.072896  ],\n",
       "       [0.069676  ],\n",
       "       [0.070069  ],\n",
       "       [0.06645   ],\n",
       "       [0.062537  ],\n",
       "       [0.056591  ],\n",
       "       [0.05352   ],\n",
       "       [0.049376  ],\n",
       "       [0.059541  ],\n",
       "       [0.055139  ],\n",
       "       [0.054384  ],\n",
       "       [0.05598   ],\n",
       "       [0.053725  ],\n",
       "       [0.047392  ],\n",
       "       [0.056555  ],\n",
       "       [0.050167  ],\n",
       "       [0.05048   ],\n",
       "       [0.050083  ],\n",
       "       [0.048052  ],\n",
       "       [0.050599  ],\n",
       "       [0.050262  ],\n",
       "       [0.050592  ],\n",
       "       [0.050048  ],\n",
       "       [0.049609  ],\n",
       "       [0.050984  ],\n",
       "       [0.052122  ],\n",
       "       [0.061949  ],\n",
       "       [0.057998  ],\n",
       "       [0.056004  ],\n",
       "       [0.055918  ],\n",
       "       [0.055349  ],\n",
       "       [0.062432  ],\n",
       "       [0.058592  ],\n",
       "       [0.057088  ],\n",
       "       [0.058607  ],\n",
       "       [0.057653  ],\n",
       "       [0.057383  ],\n",
       "       [0.058328  ],\n",
       "       [0.058961  ],\n",
       "       [0.057234  ],\n",
       "       [0.054962  ],\n",
       "       [0.053556  ],\n",
       "       [0.051702  ],\n",
       "       [0.051448  ],\n",
       "       [0.053952  ],\n",
       "       [0.054377  ],\n",
       "       [0.053698  ],\n",
       "       [0.054052  ],\n",
       "       [0.0539    ],\n",
       "       [0.053657  ],\n",
       "       [0.061986  ],\n",
       "       [0.057664  ],\n",
       "       [0.055804  ],\n",
       "       [0.057404  ],\n",
       "       [0.059696  ],\n",
       "       [0.064458  ],\n",
       "       [0.059028  ],\n",
       "       [0.061464  ],\n",
       "       [0.061684  ],\n",
       "       [0.063845  ],\n",
       "       [0.074649  ],\n",
       "       [0.070767  ],\n",
       "       [0.093445  ],\n",
       "       [0.121517  ],\n",
       "       [0.182207  ],\n",
       "       [0.36587   ],\n",
       "       [0.28417301],\n",
       "       [0.32047501],\n",
       "       [0.407318  ],\n",
       "       [0.3195    ],\n",
       "       [0.306925  ],\n",
       "       [0.26096699],\n",
       "       [0.248509  ],\n",
       "       [0.27021199],\n",
       "       [0.251111  ],\n",
       "       [0.27067399],\n",
       "       [0.27218801],\n",
       "       [0.32368201],\n",
       "       [0.30516899],\n",
       "       [0.33756101],\n",
       "       [0.39298701],\n",
       "       [0.376046  ],\n",
       "       [0.44170699],\n",
       "       [0.54133397],\n",
       "       [0.65763301],\n",
       "       [0.58080399],\n",
       "       [0.68477702],\n",
       "       [0.63643903],\n",
       "       [0.57007003],\n",
       "       [0.44996399],\n",
       "       [0.495231  ],\n",
       "       [0.38537601],\n",
       "       [0.490374  ],\n",
       "       [0.55960399],\n",
       "       [0.507972  ],\n",
       "       [0.51489502],\n",
       "       [0.487892  ],\n",
       "       [0.47611499],\n",
       "       [0.333123  ],\n",
       "       [0.40019399],\n",
       "       [0.359382  ],\n",
       "       [0.34237099],\n",
       "       [0.30807099],\n",
       "       [0.366162  ],\n",
       "       [0.346302  ],\n",
       "       [0.35369301],\n",
       "       [0.33294499],\n",
       "       [0.311205  ],\n",
       "       [0.30311   ],\n",
       "       [0.30222401],\n",
       "       [0.32580999]])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = np.array(doge.drop([\"Prediction\"], 1))\n",
    "X = X[:len(doge)-predic_day]\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "199d977e-9963-4ab7-998c-81d5ff80cbd7",
   "metadata": {
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.003179  , 0.003158  , 0.003105  , 0.003079  , 0.003163  ,\n",
       "       0.003256  , 0.003231  , 0.003206  , 0.003416  , 0.00373   ,\n",
       "       0.003858  , 0.003927  , 0.004625  , 0.004787  , 0.004508  ,\n",
       "       0.003768  , 0.00457   , 0.004582  , 0.004494  , 0.004548  ,\n",
       "       0.004592  , 0.004486  , 0.004636  , 0.004682  , 0.005685  ,\n",
       "       0.010615  , 0.009771  , 0.009767  , 0.00992   , 0.010465  ,\n",
       "       0.009742  , 0.009846  , 0.010194  , 0.00986   , 0.008835  ,\n",
       "       0.008063  , 0.008616  , 0.009397  , 0.009369  , 0.009265  ,\n",
       "       0.009067  , 0.009171  , 0.009098  , 0.00906   , 0.008166  ,\n",
       "       0.008524  , 0.008579  , 0.008727  , 0.008383  , 0.008255  ,\n",
       "       0.007482  , 0.012555  , 0.047162  , 0.028176  , 0.037196  ,\n",
       "       0.034875  , 0.03152   , 0.03712   , 0.053289  , 0.046935  ,\n",
       "       0.057595  , 0.078782  , 0.078825  , 0.07007   , 0.072896  ,\n",
       "       0.069676  , 0.070069  , 0.06645   , 0.062537  , 0.056591  ,\n",
       "       0.05352   , 0.049376  , 0.059541  , 0.055139  , 0.054384  ,\n",
       "       0.05598   , 0.053725  , 0.047392  , 0.056555  , 0.050167  ,\n",
       "       0.05048   , 0.050083  , 0.048052  , 0.050599  , 0.050262  ,\n",
       "       0.050592  , 0.050048  , 0.049609  , 0.050984  , 0.052122  ,\n",
       "       0.061949  , 0.057998  , 0.056004  , 0.055918  , 0.055349  ,\n",
       "       0.062432  , 0.058592  , 0.057088  , 0.058607  , 0.057653  ,\n",
       "       0.057383  , 0.058328  , 0.058961  , 0.057234  , 0.054962  ,\n",
       "       0.053556  , 0.051702  , 0.051448  , 0.053952  , 0.054377  ,\n",
       "       0.053698  , 0.054052  , 0.0539    , 0.053657  , 0.061986  ,\n",
       "       0.057664  , 0.055804  , 0.057404  , 0.059696  , 0.064458  ,\n",
       "       0.059028  , 0.061464  , 0.061684  , 0.063845  , 0.074649  ,\n",
       "       0.070767  , 0.093445  , 0.121517  , 0.182207  , 0.36587   ,\n",
       "       0.28417301, 0.32047501, 0.407318  , 0.3195    , 0.306925  ,\n",
       "       0.26096699, 0.248509  , 0.27021199, 0.251111  , 0.27067399,\n",
       "       0.27218801, 0.32368201, 0.30516899, 0.33756101, 0.39298701,\n",
       "       0.376046  , 0.44170699, 0.54133397, 0.65763301, 0.58080399,\n",
       "       0.68477702, 0.63643903, 0.57007003, 0.44996399, 0.495231  ,\n",
       "       0.38537601, 0.490374  , 0.55960399, 0.507972  , 0.51489502,\n",
       "       0.487892  , 0.47611499, 0.333123  , 0.40019399, 0.359382  ,\n",
       "       0.34237099, 0.30807099, 0.366162  , 0.346302  , 0.35369301,\n",
       "       0.33294499, 0.311205  , 0.30311   , 0.30222401, 0.32580999,\n",
       "       0.37007701, 0.423374  , 0.39996299, 0.37632301, 0.372177  ,\n",
       "       0.37180701, 0.33105001])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = np.array(doge[\"Prediction\"])\n",
    "y = y[:-predic_day]\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "efa5e0e7-ebbc-44ac-bbd2-8280dbc619b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "x_train, x_test, y_train, y_test = train_test_split(X,y, test_size = 0.20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e88d4aed-68f8-4721-a8a2-fec8a8fa7b3c",
   "metadata": {
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.37007701],\n",
       "       [0.423374  ],\n",
       "       [0.39996299],\n",
       "       [0.37632301],\n",
       "       [0.372177  ],\n",
       "       [0.37180701],\n",
       "       [0.33105001]])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prediction_days_array = np.array(doge.drop([\"Prediction\"], 1))[-predic_day:]\n",
    "prediction_days_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a7028c40-31de-45ba-8a5b-dea96b236578",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SVR(C=1000.0, gamma='auto')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.svm import SVR\n",
    "\n",
    "svr_rbf = SVR(kernel=\"rbf\", C=1e3, gamma=\"auto\")\n",
    "svr_rbf.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "39d71894-d024-4d04-abb2-8eb2af85b310",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.755702378926286"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "svr_rbf_confidence = svr_rbf.score(x_test, y_test)\n",
    "svr_rbf_confidence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "35241dc0-5932-401b-8a8e-de6db84fb1d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.10538715 0.38943129 0.37955021 0.13277587 0.1510007  0.04301059\n",
      " 0.14579419 0.04103226 0.04111537 0.05500805 0.41155978 0.04270094\n",
      " 0.0540413  0.03960683 0.0508497  0.38063555 0.14719863 0.14935956\n",
      " 0.16903325 0.24502981 0.38754147 0.13499827 0.17372987 0.44829093\n",
      " 0.04268349 0.38275025 0.05409481 0.14184234 0.13501103 0.04008672\n",
      " 0.36536876 0.05330234 0.04131215 0.03966382 0.15952914 0.05324233\n",
      " 0.14320675]\n",
      "\n",
      "[0.078825   0.33294499 0.251111   0.056555   0.050167   0.010465\n",
      " 0.053725   0.00457    0.004636   0.009265   0.359382   0.010615\n",
      " 0.009397   0.003858   0.03152    0.33105001 0.051448   0.053556\n",
      " 0.055139   0.306925   0.57007003 0.056004   0.049376   0.507972\n",
      " 0.00992    0.68477702 0.008835   0.055804   0.061949   0.003079\n",
      " 0.54133397 0.008166   0.004582   0.00373    0.093445   0.008524\n",
      " 0.05048   ]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "svm_predction = svr_rbf.predict(x_test)\n",
    "\n",
    "print(svm_predction)\n",
    "\n",
    "print()\n",
    "\n",
    "print(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a56ad638-f38a-4cb9-90e3-f5602583cf34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.3869705  0.3909003  0.38941559 0.38756676 0.3871772  0.38714125\n",
      " 0.38162369]\n",
      "\n",
      "               Close  Prediction\n",
      "Date                            \n",
      "2021-05-31  0.370077         NaN\n",
      "2021-06-01  0.423374         NaN\n",
      "2021-06-02  0.399963         NaN\n",
      "2021-06-03  0.376323         NaN\n",
      "2021-06-04  0.372177         NaN\n",
      "2021-06-05  0.371807         NaN\n",
      "2021-06-06  0.331050         NaN\n"
     ]
    }
   ],
   "source": [
    "#next 30 days\n",
    "svm_predction = svr_rbf.predict(prediction_days_array) #last 30 days\n",
    "\n",
    "print(svm_predction) #predito\n",
    "\n",
    "print()\n",
    "\n",
    "print(doge.tail(predic_day)) #preco atual\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "00ca6be4-fa14-4b57-816f-0ffaaaf12342",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48f4d0f6-05d0-4f18-9607-b0eaf050f638",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
